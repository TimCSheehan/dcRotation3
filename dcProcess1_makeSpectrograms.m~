% dc Process 1: make spectrograms

%% colors
dcGreen = 1/255*[68, 170, 68];
dcPurple = 1/255*[166, 38, 164];
dcLightGreen = 1/255*[163, 244, 140];
dcRed = 1/255*[224, 17, 73];
dcBlue = 1/255*[66, 185, 255];
%% load LFP and behav mats.
% have to be in the folder you want
dirbehav = dir('*_behavior.mat');
load(dirbehav.name)
dirLFP = dir('*_LFP.mat');
load(dirLFP.name)
%%
%make behav into success and fails
%% set things 
Fs = LFP.freq;
window = [-3, 3];
channel = 1;
%% make data window arrays to feed to spectrogram
%LPON_dataWindows    = dcMakeDataWindows(LFP, behav, 'LPON',     window, channel);
%LPOFF_dataWindows   = dcMakeDataWindows(LFP, behav, 'LPOFF',    window, channel);
ReinON_dataWindows_air2525  = dcMakeDataWindows(LFP, behav, 'ReinON',   window, channel);
%ReinOFF_dataWindows = dcMakeDataWindows(LFP, behav, 'ReinOFF',  window, channel);
ReinON_dataWindows_air  = dcMakeDataWindows(LFP, behav, 'ReinON',   window, channel);
ReinON_dataWindows_air  = dcMakeDataWindows(LFP, behav, 'ReinON',   window, channel);
ReinON_dataWindows_CIE  = dcMakeDataWindows(LFP, behav, 'ReinON',   window, channel);
ReinON_dataWindows_CIE  = dcMakeDataWindows(LFP, behav, 'ReinON',   window, channel);
ReinON_dataWindows_CIE  = dcMakeDataWindows(LFP, behav, 'ReinON',   window, channel);
%% make mean SPECTROGRAMS
%single
dcMeanSpectrogram(LPOFF_dataWindows(254,:),Fs);
%%
mspectro_air2525 = dcMeanSpectrogram(ReinON_dataWindows_air2525,Fs);
%%
dcMeanSpectrogram(LPOFF_dataWindows,Fs);
%%
loopSpecOnThis = ReinON_dataWindows;
for row = 1:size(loopSpecOnThis,1)
    wf=dcMeanSpectrogram(loopSpecOnThis(row,:),Fs);
    title(row)
    waitfor(wf)
end

%keyboard()
%%
% make some combined stuff
%%
arrayOfDataWindows = ReinON_dataWindows_air2525;
%% get average spectrogram
totalSpecs = size(arrayOfDataWindows,1);
%title = "animalid group event" 
% try getting this title somewhere along the

% fix timestamps part, 
% this will fail if the time window is asymmetrical:
timestamps = 0:1/Fs:size(arrayOfDataWindows, 2)/Fs;
timestamps = timestamps - median(timestamps); % to shift the middle to zero

lfp.samplingRate = Fs;
lfp.timestamps = timestamps(1:size(arrayOfDataWindows, 2));

for row = 1:totalSpecs
    lfp.data = arrayOfDataWindows(row,:)';

    wavespec = bz_WaveSpec(lfp);

    ps = abs(wavespec.data').^2;

   if row == 1
       sumps = ps;
   end
   if row > 1
       sumps = sumps+ps;
   end
   if row == totalSpecs
       meanps = sumps/totalSpecs;
   end
end
%% capture only a band
beta = [12.5, 30];
theta = [7, 9];

band = beta;

for frequency = 1:wavespec.nfreqs
    if frequency == 1
        meanpsband = [];
    end
    if wavespec.freqs(frequency) > band(1) && wavespec.freqs(frequency) < band(2)
        meanpsband = [meanpsband, meanps(frequency,:)];
    end
    
end


%% figure
f1 = figure;
a1 = axes;
p1 = imagesc(wavespec.timestamps, wavespec.freqs, meanps);
hold on
p2 = line([0 0], [0 1000], 'Color', 'w');
a1.YDir = 'normal';
% a1.YScale = 'log';
y1 = ylabel('Frequency (Hz)');
x1 = xlabel('Time (sec)');